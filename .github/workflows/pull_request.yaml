---
# This is the renderer half of a workflow
# For a brief explanation, see:
# https://github.com/TXButterflies/TXButterflies.github.io/pull/8#issue-595042251
#
# The other half is at:
# https://github.com/TXButterflies/TXButterflies.github.io/blob/main/.github/workflows/pull_request.yaml
name: Render Pull Request
on:
  workflow_dispatch:
    inputs:
      pull_request_id:
        description: |
          The number assigned to the pull request. See:
          https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/checking-out-pull-requests-locally#modifying-an-inactive-pull-request-locally
        required: true
      pull_request_event:
        description: |
          The whole event payload. See:
          https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#webhook-payload-example-32
        required: false

jobs:
  render:
    name: Build pull request site with Hugo
    runs-on: ubuntu-latest
    if: "${{ github.event_name == 'workflow_dispatch' }}"
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: gh-pages/

      - name: Install hugo
        shell: bash
        env:
          GITHUB_WORKSPACE: "${{ github.workspace }}"
        run: |
          # See: https://docs.github.com/en/rest/reference/repos#releases
          set -eu
          HUGO_DIR="${GITHUB_WORKSPACE:-$(pwd)}/hugo"
          mkdir -p "${HUGO_DIR}"
          eval "$(curl --fail \
              --silent \
              --show-error \
              --location \
              --url 'https://api.github.com/repos/gohugoio/hugo/releases/latest' \
              | jq --compact-output --raw-output '.assets |
                  (
                    map(select(.name | test("^hugo_extended_\\d+\\.\\d+\\.\\d+_Linux-64bit.tar.gz$")))[0]
                    | ["HUGO_FILENAME='"'"'" + .name + "'"'"'", "HUGO_URL='"'"'" + .browser_download_url + "'"'"'"]
                  )
                  +
                  (
                    map(select(.name | test("^hugo_\\d+\\.\\d+\\.\\d+_checksums.txt$")))[0]
                    | ["CHECKSUM_FILENAME='"'"'" + .name + "'"'"'", "CHECKSUM_URL='"'"'" + .browser_download_url + "'"'"'"]
                  )
                  | .[]')"
          curl --fail \
               --location \
               --url "${CHECKSUM_URL}" \
               --output "${HUGO_DIR}/${CHECKSUM_FILENAME}" &
          CHECKSUM_PID=$!
          curl --fail \
               --location \
               --url "${HUGO_URL}" \
               --output "${HUGO_DIR}/${HUGO_FILENAME}" &
          HUGO_PID=$!
          wait "${CHECKSUM_PID}" "${HUGO_PID}"
          (cd "${HUGO_DIR}" \
              && grep --no-messages \
                      --no-filename \
                      --fixed-strings \
                      "${HUGO_FILENAME}" \
                      "${CHECKSUM_FILENAME}" \
              | sha256sum --check)
          tar -vxzf "${HUGO_DIR}/${HUGO_FILENAME}" --overwrite -C "${HUGO_DIR}"
          rm "${HUGO_DIR}/LICENSE" "${HUGO_DIR}/README.md" "${HUGO_DIR}/${HUGO_FILENAME}" "${HUGO_DIR}/${CHECKSUM_FILENAME}"
          echo "HUGO_BIN=${HUGO_DIR}/hugo" >> "${GITHUB_ENV}"

      - name: Render pull request
        shell: bash
        env:
          PULL_REQUEST_ID: "${{ github.event.inputs.pull_request_id }}"
          ACTIONS_USERNAME: "github-actions"
          ACTIONS_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
          HUGO_BASEURL: "https://pr.texasbutterfliesmonitoring.org/${{ github.event.inputs.pull_request_id }}/"
          # The repository where the pull request is; the dispatching repository
          REPOSITORY_OF_PULL_REQUEST: "TXButterflies/TXButterflies.github.io"
          SOURCE: "${{ github.workspace }}/pull_request/"
          DESTINATION: "${{ github.workspace }}/gh-pages/${{ github.event.inputs.pull_request_id }}"
          HUGO_ENVIRONMENT: development
        run: |
          set -eu
          git config --global user.name "${ACTIONS_USERNAME}"
          git config --global user.email "${ACTIONS_EMAIL}"
          git init "${GITHUB_WORKSPACE}/pull_request/"
          cd "${GITHUB_WORKSPACE}/pull_request/"
          git remote add origin "https://github.com/${REPOSITORY_OF_PULL_REQUEST}.git"
          git fetch origin "refs/pull/${PULL_REQUEST_ID}/merge"
          git checkout FETCH_HEAD
          # Add pull_request event payload to the data dir so that hugo can access it
          if cat "${GITHUB_EVENT_PATH}" | jq -e '.inputs | has("pull_request_event")' > /dev/null 2>&1; then
              mkdir -p ./data/
              cat "${GITHUB_EVENT_PATH}" | jq --compact-output '.inputs.pull_request_event' > ./data/pull_request.json
          fi
          cd "${GITHUB_WORKSPACE}"
          mkdir -p "${DESTINATION}"
          "${HUGO_BIN}" env --source "${SOURCE}"
          "${HUGO_BIN}" config --source "${SOURCE}"
          "${HUGO_BIN}" \
              --source "${SOURCE}" \
              --destination "${DESTINATION}" \
              --cleanDestinationDir
          cd "${GITHUB_WORKSPACE}/gh-pages/"
          git add -A :/
          git commit -m "publish ${REPOSITORY_OF_PULL_REQUEST}#${PULL_REQUEST_ID}"
          git push
...
